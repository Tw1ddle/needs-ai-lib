::use 'main.mtt'::

<h1>Needs AI API documentation <small ::cond api.isDefined("version")::>version ::api.getValue('version')::</small></h1>
<p>Needs AI is a utility-based AI library written in Haxe.</p>
<h3>Getting Started With Needs AI</h3>
<ul>
	<li>Take a look at the readme in the <a href="https://github.com/Tw1ddle/needs-ai-lib">code repository</a></li>
	<li>Try out the <a href="http://tw1ddle.github.io/needs-ai/index.html/">online demo</a></li>
</ul>
<hr/>
<h3>Top Level</h3>

<table class="table table-condensed">
	<tbody>
		<tr ::cond full != ""::>
			<th width="200">
				<i class="fa fa-folder-o"></i>
				<a href="../index.html" title="::full.split(".").slice(0,-1).join(".")::">..</a>
			</th>
			<td></td>
		</tr>
		::foreach tree subs::
			::set name = api.getTreeName(tree)::
			::set treeType = api.getTreeType(tree)::
			<tr class="::treeType::" ::cond name.charAt(0) != "_"::>
				::if (treeType=="package")::
				<td colspan="2">
					<i class="fa fa-folder-o"></i>
					<a href="::api.getTreeUrl(tree)::" title="::full::.::name::">::name::</a>
				</td>
				::else::
				<td width="200">
					<a href="::api.getTreeUrl(tree)::" title="::full::.::name::">::name::</a>
				</td>
				<td>
					::raw api.getTreeShortDesc(tree)::
				</td>
				::end::
			</tr>
		::end::
	</tbody>
</table>

<h3>Class Diagrams</h3>

<img src="uml/needs.ai.png">
<br>
<img src="uml/needs.responses.png">
<br>
<img src="uml/needs.inputs.png">
<br>

::end::

